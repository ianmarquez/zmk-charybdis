#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define U_TAPPING_TERM 200

&mt {
    tapping-term-ms = <250>;
    quick-tap-ms = <250>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <250>;
    quick-tap-ms = <250>;
};

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    behaviors {
        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
        };

        hold_shift: hold_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "HOLD_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_SHIFT>, <&kp CLCK>;

            tapping-term-ms = <100>;
        };
    };

    combos {
        compatible = "zmk,combos";

        toggle_mouse_layer {
            bindings = <&tog 3>;
            key-positions = <33 9>;
        };

        return_base_layer {
            bindings = <&to 0>;
            key-positions = <5 33>;
        };

        Escape_Combo {
            bindings = <&kp ESCAPE>;
            key-positions = <12 13>;
        };

        Caps_Combo {
            bindings = <&kp CAPSLOCK>;
            key-positions = <11 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp Q             &kp W              &kp E             &kp R                   &kp T                   &kp Y  &kp U                &kp I              &kp O               &kp P
&hrm_left LALT A  &hrm_left LCTRL S  &hrm_left LCMD D  &hrm_left LEFT_SHIFT F  &kp G                   &kp H  &hrm_right RSHIFT J  &hrm_right RGUI K  &hrm_right RCTRL L  &kp SEMI
&kp Z             &kp X              &kp C             &lt 3 V                 &kp B                   &kp N  &lt 4 M              &kp COMMA          &kp PERIOD          &kp SLASH
                                                       &mt LSHIFT ESCAPE       &lt 1 SPACE  &lt 3 TAB         &mt RCTRL ENTER      &lt 2 BACKSPACE
            >;
        };

        Symbols {
            bindings = <
&kp PIPE                  &kp EXCL                      &kp AMPERSAND                 &kp MINUS                       &kp LEFT_PARENTHESIS          &kp RIGHT_PARENTHESIS  &kp PLUS                             &kp EQUAL               &kp ASTERISK            &kp BACKSLASH
&hrm_left LEFT_ALT GRAVE  &hrm_left LCTRL SINGLE_QUOTE  &hrm_left LGUI DOUBLE_QUOTES  &hrm_left LEFT_SHIFT LESS_THAN  &kp LEFT_BRACE                &kp RIGHT_BRACE        &hrm_right RIGHT_SHIFT GREATER_THAN  &hrm_right RGUI PERIOD  &hrm_right RCTRL COMMA  &hrm_right RIGHT_ALT SLASH
&kp CARET                 &kp POUND                     &kp UNDER                     &kp PERCENT                     &kp LEFT_BRACKET              &kp RIGHT_BRACKET      &kp TILDE                            &kp AT                  &kp DOLLAR              &kp QUESTION
                                                                                      &trans                          &trans                &trans                         &kp SEMI                             &kp COLON
            >;
        };

        Numbers {
            bindings = <
&kp N1    &kp N2     &kp N3    &kp N4     &kp N5           &kp N6      &kp N7                &kp N8             &kp N9           &kp N0
&kp LALT  &kp LCTRL  &kp LGUI  &kp LSHFT  &trans           &kp LEFT    &mt RIGHT_SHIFT DOWN  &mt RCMD UP_ARROW  &mt RCTRL RIGHT  &kp RIGHT_ALT
&kp F2    &kp F11    &kp F10   &trans     &trans           &kp DELETE  &trans                &trans             &trans           &trans
                               &kp F1     &kp F5  &kp F12              &trans                &trans
            >;
        };

        Mouse {
            bindings = <
&kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none           &mo 5         &none  &none      &none       &none  &none
&kp LALT    &kp LCTRL          &kp LGUI         &kp LEFT_SHIFT  &none         &none  &mkp LCLK  &mkp RCLK   &none  &none
&none       &kp LG(X)          &kp LG(C)        &kp LG(V)       &none         &none  &mo 4      &none       &none  &none
                                                &none           &none  &none         &kp F11    &kp RC(UP)
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans          &trans  &trans
            >;
        };

        keyboard_controls {
            bindings = <
&bootloader  &sys_reset  &trans  &trans  &trans          &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans      &trans  &trans  &trans          &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans
&trans       &trans      &trans  &trans  &trans          &trans        &trans          &trans        &trans        &trans
                                 &trans  &trans  &trans                &trans          &trans
            >;
        };
    };
};
