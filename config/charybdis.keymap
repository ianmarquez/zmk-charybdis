#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define U_TAPPING_TERM 200

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    behaviors {
        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
        };

        hold_shift: hold_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "HOLD_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_SHIFT>, <&kp CLCK>;

            tapping-term-ms = <100>;
        };

        tapdance_parens: tapdance_parens {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_PARENS";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        tapdance_curly: tapdance_curly {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_CURLY";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };

        tapdance_square: tapdance_square {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_SQUARE";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        tapdance_gt: tapdance_gt {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_GT";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
        };

        tapdance_grave: tapdance_grave {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_GRAVE";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

        tapdance_quotes: tapdance_quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_QUOTES";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
        };

        tapdance_or_and: tapdance_or_and {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_OR_AND";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp AMPERSAND>, <&kp PIPE>;
        };

        tapdance_multi_div: tapdance_multi_div {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_MULTI_DIV";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp ASTERISK>, <&kp SLASH>;
        };

        tapdance_tab_mouselayer: tapdance_tab_mouselayer {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_TAB_MOUSELAYER";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp TAB>, <&mo 3>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&mo 3>, <&kp TAB>;
        };
    };

    combos {
        compatible = "zmk,combos";

        toggle_mouse_layer {
            bindings = <&tog 3>;
            key-positions = <33 9>;
        };

        return_base_layer {
            bindings = <&to 0>;
            key-positions = <5 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp Q             &kp W              &kp E             &kp R                   &kp T                                  &kp Y  &kp U                &kp I              &kp O               &kp P
&hrm_left LALT A  &hrm_left LCTRL S  &hrm_left LCMD D  &hrm_left LEFT_SHIFT F  &kp G                                  &kp H  &hrm_right RSHIFT J  &hrm_right RGUI K  &hrm_right RCTRL L  &kp SEMI
&kp Z             &kp X              &kp C             &kp V                   &kp B                                  &kp N  &lt 4 M              &kp COMMA          &kp PERIOD          &kp SLASH
                                                       &mt LSHIFT ESCAPE       &lt 1 SPACE  &tapdance_tab_mouselayer         &mt RCTRL ENTER      &lt 2 BACKSPACE
            >;
        };

        Symbols {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN       &tapdance_or_and  &kp DOLLAR  &tapdance_parens          &tapdance_multi_div  &kp N7  &kp N8  &kp N9  &trans
&tapdance_grave  &tapdance_quotes  &kp MINUS         &kp PLUS    &tapdance_curly           &tapdance_gt         &kp N4  &kp N5  &kp N6  &kp N0
&kp CARET        &kp POUND         &kp UNDER         &kp EQUAL   &tapdance_square          &kp PERCENT          &kp N1  &kp N2  &kp N3  &trans
                                                     &trans      &trans            &trans                       &trans  &trans
            >;
        };

        Navigation {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5           &trans      &trans          &trans        &trans     &kp BACKSPACE
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10          &kp LEFT    &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans
&kp F11  &kp F12  &trans  &trans  &trans           &kp DELETE  &trans          &trans        &trans     &trans
                          &trans  &trans   &trans              &trans          &trans
            >;
        };

        Mouse {
            bindings = <
&kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none           &mo 5         &none  &none      &none       &none  &none
&kp LALT    &kp LCTRL          &kp LGUI         &kp LEFT_SHIFT  &none         &none  &mkp LCLK  &mkp RCLK   &none  &none
&none       &kp LG(X)          &kp LG(C)        &kp LG(V)       &none         &none  &mo 4      &none       &none  &none
                                                &none           &none  &none         &kp F11    &kp RC(UP)
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans          &trans  &trans
            >;
        };

        keyboard_controls {
            bindings = <
&bootloader  &sys_reset  &trans  &trans  &trans          &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans      &trans  &trans  &trans          &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans
&trans       &trans      &trans  &trans  &trans          &trans        &trans          &trans        &trans        &trans
                                 &trans  &trans  &trans                &trans          &trans
            >;
        };
    };
};
